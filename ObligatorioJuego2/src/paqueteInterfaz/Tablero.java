package paqueteInterfaz;

import PackageJuego.Ficha;
import PackageJuego.Sistema;
import PackageJuego.Tablero1;
import java.io.File;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.Clip;
import javax.sound.sampled.AudioSystem;
import java.awt.event.*;
import java.awt.*;
import javax.swing.*;
import sun.awt.resources.awt;

public class Tablero extends javax.swing.JFrame {

    private static Sistema sistema;
    private Ficha fichaRoja, fichaAzul;
    private JButton[][] botones;
    private Tablero1 tablero;

    public Tablero(Sistema sistema) {
        this.sistema = sistema;
        fichaRoja = sistema.getListaFichas().get(0);
        fichaAzul = sistema.getListaFichas().get(1);
        int[] posicionesiValidasRojas = fichaRoja.getPosicionesi();
        int[] posicionesjValidasRojas = fichaRoja.getPosicionesj();
        int[] posicionesiValidasAzules = fichaAzul.getPosicionesi();
        int[] posicionesjValidasAzules = fichaAzul.getPosicionesj();
        initComponents();
        // crear botones y agregarlos al panel
        panelJuego.setLayout(new GridLayout(8, 9));
        botones = new JButton[9][10];
        for (int i = 0; i <= 7; i++) {
            for (int j = 0; j <= 8; j++) {
                int numero = 11;
                JButton jButton = new JButton();
                jButton.addActionListener(new ListenerBoton(i, j));
                panelJuego.add(jButton);
                botones[i][j] = jButton;
                botones[i][j].setMargin(new Insets(-5, -5, -5, -5));
                boolean valida = false;
                boolean valida2 = false;
                for (int m = 1; m < fichaRoja.getPosicionesi().length; m++) {
                    if ((i == posicionesiValidasRojas[m]) && (j == posicionesjValidasRojas[m])) {
                        valida = true;
                        numero=m;
                    }
                    if ((i == posicionesiValidasAzules[m]) && (j == posicionesjValidasAzules[m])) {
                        valida2 = true;
                        numero=m;
                    }
                }
                if (valida) {
                    botones[i][j].setBackground(Color.red);
                    botones[i][j].setText(Integer.toString(numero));
                         
                }
                if (valida2) {
                    botones[i][j].setBackground(Color.blue);
                    botones[i][j].setText(Integer.toString(numero));
                }
            }
        }
    }

        /**
         * This method is called from within the constructor to initialize the
         * form. WARNING: Do NOT modify this code. The content of this method is
         * always regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelJuego = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        javax.swing.GroupLayout panelJuegoLayout = new javax.swing.GroupLayout(panelJuego);
        panelJuego.setLayout(panelJuegoLayout);
        panelJuegoLayout.setHorizontalGroup(
            panelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 587, Short.MAX_VALUE)
        );
        panelJuegoLayout.setVerticalGroup(
            panelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 408, Short.MAX_VALUE)
        );

        getContentPane().add(panelJuego);
        panelJuego.setBounds(74, 43, 587, 408);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Metodo para producir sonido
    public void playSound(String soundName) {
        try {
            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File(soundName).getAbsoluteFile());
            Clip clip = AudioSystem.getClip();
            clip.open(audioInputStream);
            clip.start();
        } catch (Exception ex) {
            System.out.println("Error with playing sound.");
            ex.printStackTrace();

        }
    }

    private class ListenerBoton implements ActionListener {

        private int x;
        private int y;

        public ListenerBoton(int i, int j) {
// en el constructor se almacena la fila y columna que se presionó
            x = i;
            y = j;
        }

        public void actionPerformed(ActionEvent e) {
// cuando se presiona un botón, se ejecutará este método
            clickBoton(x, y);
        }
    }

    private void clickBoton(int fila, int columna) {
// Método a completar!.
// En fila y columna se reciben las coordenas donde presionó el usuario, relativas al comienzo de la grilla
// fila 1 y columna 1 corresponden a la posición de arriba a la izquierda.
// Debe indicarse cómo responder al click de ese botón.
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panelJuego;
    // End of variables declaration//GEN-END:variables
}
